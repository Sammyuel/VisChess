'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.color = exports.CustomColors = undefined;

var _supportsColor = require('supports-color');

var _supportsColor2 = _interopRequireDefault(_supportsColor);

var _chalk = require('chalk');

var _chalk2 = _interopRequireDefault(_chalk);

var _ansiStyles = require('ansi-styles');

var _ansiStyles2 = _interopRequireDefault(_ansiStyles);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const CustomColors = exports.CustomColors = {
  supports: _supportsColor2.default,
  // map gray -> dim because it's not solarized compatible
  gray: s => _chalk2.default.dim(s),
  grey: s => _chalk2.default.dim(s),
  attachment: s => _chalk2.default.cyan(s),
  addon: s => _chalk2.default.yellow(s),
  configVar: s => _chalk2.default.green(s),
  release: s => _chalk2.default.blue.bold(s),
  cmd: s => _chalk2.default.cyan.bold(s),
  app: s => CustomColors.heroku(`â¬¢ ${s}`),
  heroku: s => {
    if (!CustomColors.supports) return s;
    let has256 = CustomColors.supports.has256 || (process.env.TERM || '').indexOf('256') !== -1;
    return has256 ? '\u001b[38;5;104m' + s + _ansiStyles2.default.reset.open : _chalk2.default.magenta(s);
  }
};

const color = exports.color = new Proxy(_chalk2.default, {
  get: (chalk, name) => {
    if (CustomColors[name]) return CustomColors[name];
    return chalk[name];
  }
});