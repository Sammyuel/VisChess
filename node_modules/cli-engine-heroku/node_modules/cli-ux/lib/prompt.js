"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const base_1 = require("./base");
const deps_1 = require("./deps");
class Prompt extends base_1.Base {
    prompt(name, inputOptions = {}) {
        const options = Object.assign({ isTTY: !!(process.env.TERM !== 'dumb' && process.stdin.isTTY), name, prompt: name ? deps_1.deps.chalk.dim(`${name}: `) : deps_1.deps.chalk.dim('> '), type: 'normal' }, inputOptions);
        switch (options.type) {
            case 'normal':
                return this.normal(options);
            case 'mask':
            case 'hide':
                return deps_1.deps.passwordPrompt(options.prompt, { method: options.type });
            default:
                throw new Error(`unexpected type ${options.type}`);
        }
    }
    normal(options, retries = 100) {
        if (retries < 0)
            throw new Error('no input');
        return new Promise(resolve => {
            process.stdin.setEncoding('utf8');
            this.stderr.write(options.prompt);
            process.stdin.resume();
            process.stdin.once('data', data => {
                process.stdin.pause();
                data = data.trim();
                if (data === '') {
                    resolve(this.normal(options, retries - 1));
                }
                else {
                    resolve(data);
                }
            });
        });
    }
}
exports.Prompt = Prompt;
